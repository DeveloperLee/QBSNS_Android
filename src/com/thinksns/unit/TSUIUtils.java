package com.thinksns.unit;import java.util.regex.Matcher;import java.util.regex.Pattern;import com.thinksns.android.R;import com.thinksns.components.TSFaceView;import com.thinksns.model.Weibo.From;import android.app.Activity;import android.app.AlertDialog;import android.app.AlertDialog.Builder;import android.content.Context;import android.content.DialogInterface;import android.text.Spannable;import android.text.style.ImageSpan;import android.util.Log;import android.view.inputmethod.InputMethodManager;import android.widget.EditText;public class TSUIUtils {	/**	 * 隐藏输入法	 * 	 * @param paramContext	 * @param paramEditText	 */	public static void hideSoftKeyboard(Context paramContext,			EditText paramEditText) {		((InputMethodManager) paramContext.getSystemService("input_method"))				.hideSoftInputFromWindow(paramEditText.getWindowToken(), 0);	}	/**	 * 显示输入法	 * 	 * @param paramContext	 * @param paramEditText	 */	public static void showSoftKeyborad(Context paramContext,			EditText paramEditText) {		((InputMethodManager) paramContext.getSystemService("input_method"))				.showSoftInput(paramEditText, 0);	}	public static void highlightContent(Context paramContext, Spannable paramSpannable)	  {	    try {	    	Matcher localMatcher = Pattern.compile("\\[(\\S+?)\\]").matcher(paramSpannable);		    while (true)		    {		      if (!localMatcher.find())		        return;		      int i = localMatcher.start();		      int j = localMatcher.end();		      String str = localMatcher.group(1);		      Integer localInteger = TSFaceView.facesKeyString.get(str);		      if ((localInteger.intValue() <= 0) || (localInteger == null))		        continue;		      paramSpannable.setSpan(new ImageSpan(paramContext, localInteger.intValue()), i, j, 33);		    }		} catch (Exception e) {			// TODO: handle exception			Log.d("TSUtils", e.toString());		}	  }		public static String replaseFrome(String str){		if(str.equals(From.WEB.toString())){			return "网站" ;		}else if(str.equals(From.WAP.toString())){			return "手机网页" ;		}else if(str.equals(From.ANDROID.toString())){			return "Android客户端" ;		}else if(str.equals(From.IPHONE.toString())){			return "iPhone客户端" ;		}		return "网站";	}		public static void dialog(Activity activity) {		AlertDialog.Builder builder = new Builder(activity);		final Activity obj = activity;		builder.setTitle(R.string.dialog_alert);		builder.setMessage(R.string.exit);		builder.setPositiveButton(R.string.dialog_ok,				new android.content.DialogInterface.OnClickListener() {					@Override					public void onClick(DialogInterface dialog, int which) {						dialog.dismiss();						obj.finish();					}				});		builder.setNegativeButton(R.string.dialog_cancel,				new android.content.DialogInterface.OnClickListener() {					@Override					public void onClick(DialogInterface dialog, int which) {						dialog.dismiss();					}				});		builder.create().show();	}		public static String JSONFilterBom(String in) {        // consume an optional byte order mark (BOM) if it exists        if (in != null && in.startsWith("\ufeff")) {            in = in.substring(1);        }       return in;    }}